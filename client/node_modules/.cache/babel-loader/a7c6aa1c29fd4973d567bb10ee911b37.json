{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from \"./alert\";\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from \"./types\"; // Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove  Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/unlike/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/actions/post.js"],"names":["axios","setAlert","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from \"./alert\";\nimport {DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES} from \"./types\";\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add Like\nexport const addLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Remove  Like\nexport const removeLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Delete post\nexport const deletePost  = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type: DELETE_POST,\n            payload: {id}\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}