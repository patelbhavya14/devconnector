{"ast":null,"code":"var _jsxFileName = \"/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/dashboard/Experience.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from \"../../actions/profile\";\n\nconst Experience = ({\n  experience\n}) => {\n  const experiences = experience.map(exp => React.createElement(\"tr\", {\n    key: exp._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, exp.company), React.createElement(\"td\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, exp.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, exp.from), \" - \", ' ', exp.to === null ? 'Now' : React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, exp.to)), React.createElement(\"td\", {\n    onClick: () => deleteExperience(exp_id),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Delete\")));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Experience Credentials\"), React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Company\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Years\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, experiences)));\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteExperience\n})(Experience);","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/dashboard/Experience.js"],"names":["React","Fragment","PropTypes","Moment","connect","deleteExperience","Experience","experience","experiences","map","exp","_id","company","title","from","to","exp_id","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AACjC,QAAMC,WAAW,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAAG,IACnC;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,GAAG,CAACE,OAAT,CADJ,EAEI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,GAAG,CAACG,KAA7B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,GAAG,CAACI,IAAjC,CADJ,SACuD,GADvD,EAEKJ,GAAG,CAACK,EAAJ,KAAW,IAAX,GACG,KADH,GAGG,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,GAAG,CAACK,EAAjC,CALR,CAHJ,EAYI;AAAI,IAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACW,MAAD,CAAnC;AAA6C,IAAA,SAAS,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADiB,CAApB;AAiBA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQR,WAAR,CATJ,CAFJ,CADJ;AAgBH,CAlCD;;AAoCAF,UAAU,CAACW,SAAX,GAAuB;AACnBV,EAAAA,UAAU,EAAEL,SAAS,CAACgB,KAAV,CAAgBC,UADT;AAEnBd,EAAAA,gBAAgB,EAAEH,SAAS,CAACkB,IAAV,CAAeD;AAFd,CAAvB;AAKA,eAAef,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAAkCC,UAAlC,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport {deleteExperience} from \"../../actions/profile\";\n\nconst Experience = ({experience}) => {\n    const experiences = experience.map(exp => (\n       <tr key={exp._id} >\n           <td>{exp.company}</td>\n           <td className=\"hide-sm\">{exp.title}</td>\n           <td>\n               <Moment format='YYYY/MM/DD'>{exp.from}</Moment> - {' '}\n               {exp.to === null ? (\n                   'Now'\n               ): (\n                   <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\n               )\n           }\n           </td>\n           <td onClick={() => deleteExperience(exp_id)} className=\"btn btn-danger\">Delete</td>\n       </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className=\"hide-sm\">Title</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    );\n}\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteExperience})(Experience);"]},"metadata":{},"sourceType":"module"}