{"ast":null,"code":"var _jsxFileName = \"/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/posts/Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../actions/post\";\nimport Spinner from '../layout/Spinner';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \" Welcome to the community\"), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, posts.map()));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getPosts","Spinner","Posts","post","posts","loading","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAACF,EAAAA,QAAD;AAAWG,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAjB,CAAD,KAAwC;AAClDR,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ;AACX,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAIA,SAAOK,OAAO,GAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,GACV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,8BAFJ,EAMI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,GAAN,EADL,CANJ,CADJ;AAYH,CAjBD;;AAmBAJ,KAAK,CAACK,SAAN,GAAkB;AACdP,EAAAA,QAAQ,EAAEF,SAAS,CAACU,IAAV,CAAeC,UADX;AAEdN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADoB,CAAZ,CAAxB;;AAGA,eAAeJ,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAqCE,KAArC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getPosts} from \"../../actions/post\";\nimport Spinner from '../layout/Spinner'\n\n\n\nconst Posts = ({getPosts, post: {posts, loading}}) => {\n    useEffect(() => {\n        getPosts();\n    },[getPosts]);\n\n    return loading? <Spinner/>: (\n        <Fragment>\n            <h1 className=\"large\">Posts</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Welcome to the community\n            </p>\n            {/* PostForm */}\n            <div className=\"posts\">\n                {posts.map()}\n            </div>\n        </Fragment>\n    );\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\nexport default connect(mapStateToProps, {getPosts})(Posts);"]},"metadata":{},"sourceType":"module"}