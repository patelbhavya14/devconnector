{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from \"./alert\";\nimport { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES } from \"./types\"; // Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove  Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/unlike/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id));\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts/comment/\".concat(postId), formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId));\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/actions/post.js"],"names":["axios","setAlert","ADD_COMMENT","ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_ERROR","REMOVE_COMMENT","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from \"./alert\";\nimport {\n    ADD_COMMENT,\n    ADD_POST,\n    DELETE_POST,\n    GET_POST,\n    GET_POSTS,\n    POST_ERROR,\n    REMOVE_COMMENT,\n    UPDATE_LIKES\n} from \"./types\";\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add Like\nexport const addLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Remove  Like\nexport const removeLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Delete post\nexport const deletePost  = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type: DELETE_POST,\n            payload: {id}\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add post\nexport const addPost  = (formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.post('/api/posts', formData, config);\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Get Post\nexport const getPost = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add comment\nexport const addComment  = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Delete comment\nexport const deleteComment  = (postId, commentId) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n\n    } catch(err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};"]},"metadata":{},"sourceType":"module"}