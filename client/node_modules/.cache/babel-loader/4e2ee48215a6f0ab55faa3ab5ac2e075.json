{"ast":null,"code":"var _jsxFileName = \"/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from '../layout/Spinner';\nimport { getPost } from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","Link","Post","post","loading","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACH,EAAAA,OAAD;AAAUI,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AACtDV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEP,CAACR,OAAD,CAFO,CAAT;AAGA,SACIK,OAAO,IAAID,IAAI,KAAK,IAApB,GAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAKQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANZ;AAcH,CAlBD;;AAoBAD,IAAI,CAACM,SAAL,GAAiB;AACbT,EAAAA,OAAO,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADX;AAEbP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAoCG,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from '../layout/Spinner';\nimport {getPost} from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport {Link} from \"react-router-dom\";\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    },[getPost]);\n    return (\n        loading || post === null?\n            (\n                <Spinner/>\n            ):\n            (\n                <Fragment>\n                    <Link to=\"/posts\" className=\"btn\">\n                        Back To Posts\n                    </Link>\n                    <PostItem post={post} showActions={false}/>\n                </Fragment>\n            )\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}