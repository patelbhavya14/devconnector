{"ast":null,"code":"var _jsxFileName = \"/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport { connect } from \"react-redux\";\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, date)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, likes.length)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: \"post.html\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Discussion \", React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, comments.length)), !auth.loading, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PostItem);","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport {connect} from \"react-redux\";\n\nconst PostItem = ({auth, post: {_id, text, name, avatar, user, likes, comments, date }}) => {\n    return (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <a href=\"profile.html\">\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </a>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n                <button type=\"button\" className=\"btn btn-light\">\n                    <i className=\"fas fa-thumbs-up\"></i>\n                    <span>{likes.length}</span>\n                </button>\n                <button type=\"button\" className=\"btn btn-light\">\n                    <i className=\"fas fa-thumbs-down\"></i>\n                </button>\n                <a href=\"post.html\" className=\"btn btn-primary\">\n                    Discussion <span className='comment-count'>{comments.length}</span>\n                </a>\n                {!auth.loading}\n                <button type=\"button\" className=\"btn btn-danger\">\n                    <i className=\"fas fa-times\" />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PostItem);\n"]},"metadata":{},"sourceType":"module"}