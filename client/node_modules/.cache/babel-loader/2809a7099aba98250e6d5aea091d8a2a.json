{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account&profile\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) try {\n    const res = await axios.delete('api/profile');\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: ACCOUNT_DELETED\n    });\n    dispatch(setAlert('Your Account has been permanantly deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/actions/profile.js"],"names":["axios","setAlert","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAImBC,cAJnB,QAKO,SALP,C,CAOA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAMC,GAAN,EAAW;AACTN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMX,QAAN,IAAkB;AAC/C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,cAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAMC,GAAN,EAAW;AACTN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAdM,C,CAgBP;;AACA,OAAO,MAAME,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAAI,GAAG,KAA3B,KAAqC,MAAMf,QAAN,IAAiB;AAC/E,MAAI;AACA,UAAMgB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAOA,UAAMhB,GAAG,GAAG,MAAMT,KAAK,CAAC0B,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCG,MAArC,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACP,QAAQ,CAACsB,IAAI,GAAE,iBAAF,GAAqB,iBAA1B,EAA6C,SAA7C,CAAT,CAAR;;AAEA,QAAG,CAACA,IAAJ,EAAU;AACND,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH;AAGJ,GAtBD,CAsBE,OAAMb,GAAN,EAAW;AACT,UAAMc,MAAM,GAAGd,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBe,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAItB,QAAQ,CAACP,QAAQ,CAAC6B,KAAK,CAACf,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAnCM,C,CAqCP;;AACA,OAAO,MAAMa,aAAa,GAAG,CAACV,QAAD,EAAWC,OAAX,KAAuB,MAAMd,QAAN,IAAkB;AAClE,MAAI;AACA,UAAMgB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAOA,UAAMhB,GAAG,GAAG,MAAMT,KAAK,CAACgC,GAAN,CAAU,yBAAV,EAAqCX,QAArC,EAA+CG,MAA/C,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,cADD;AAELM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACP,QAAQ,CAAC,kBAAD,EAAqB,SAArB,CAAT,CAAR;AAEAqB,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAlBD,CAkBE,OAAMb,GAAN,EAAW;AACT,UAAMc,MAAM,GAAGd,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBe,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAItB,QAAQ,CAACP,QAAQ,CAAC6B,KAAK,CAACf,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CA/BM,C,CAiCP;;AACA,OAAO,MAAMe,YAAY,GAAG,CAACZ,QAAD,EAAWC,OAAX,KAAuB,MAAMd,QAAN,IAAkB;AACjE,MAAI;AACA,UAAMgB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAOA,UAAMhB,GAAG,GAAG,MAAMT,KAAK,CAACgC,GAAN,CAAU,wBAAV,EAAoCX,QAApC,EAA8CG,MAA9C,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,cADD;AAELM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACP,QAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAT,CAAR;AAEAqB,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAlBD,CAkBE,OAAMb,GAAN,EAAW;AACT,UAAMc,MAAM,GAAGd,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBe,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAItB,QAAQ,CAACP,QAAQ,CAAC6B,KAAK,CAACf,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CA/BM,C,CAiCP;;AACA,OAAO,MAAMgB,gBAAgB,GAAIC,EAAD,IAAQ,MAAM3B,QAAN,IAAkB;AACtD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACoC,MAAN,mCAAwCD,EAAxC,EAAlB;AAEA3B,IAAAA,QAAQ,CAAC;AACNG,MAAAA,IAAI,EAAEL,cADA;AAENM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFP,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACP,QAAQ,CAAC,oBAAD,EAAuB,SAAvB,CAAT,CAAR;AACH,GATD,CASE,OAAMa,GAAN,EAAW;AACTN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAMmB,eAAe,GAAIF,EAAD,IAAQ,MAAM3B,QAAN,IAAkB;AACrD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACoC,MAAN,kCAAuCD,EAAvC,EAAlB;AAEA3B,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,cADD;AAELM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACP,QAAQ,CAAC,mBAAD,EAAsB,SAAtB,CAAT,CAAR;AACH,GATD,CASE,OAAMa,GAAN,EAAW;AACTN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAMoB,aAAa,GAAIH,EAAD,IAAQ,MAAM3B,QAAN,IAAkB;AACnD,MAAG+B,MAAM,CAACC,OAAP,CAAe,uCAAf,CAAH,EACA,IAAI;AACA,UAAM/B,GAAG,GAAG,MAAMT,KAAK,CAACoC,MAAN,CAAa,aAAb,CAAlB;AAEA5B,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AAEAK,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AAEAM,IAAAA,QAAQ,CAACP,QAAQ,CAAC,2CAAD,EAA8C,SAA9C,CAAT,CAAR;AACH,GARD,CAQE,OAAMa,GAAN,EAAW;AACTN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAAnB;AAA+BC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    ACCOUNT_DELETED,\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    PROFILE_ERROR, UPDATE_PROFILE\n} from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit? 'Profile Updated': 'Profile Created', 'success'));\n\n        if(!edit) {\n            history.push('/dashboard');\n        }\n\n\n    } catch(err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')) );\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n    } catch(err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')) );\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n    } catch(err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')) );\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n           type: UPDATE_PROFILE,\n           payload: res.data\n        });\n\n        dispatch(setAlert('Experience Deleted', 'success'));\n    } catch(err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\n// Delete education\nexport const deleteEducation = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Deleted', 'success'));\n    } catch(err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n\n// Delete account&profile\nexport const deleteAccount = (id) => async dispatch => {\n    if(window.confirm('Are you sure? This can NOT be undone!'))\n    try {\n        const res = await axios.delete('api/profile');\n\n        dispatch({type: CLEAR_PROFILE});\n\n        dispatch({type: ACCOUNT_DELETED});\n\n        dispatch(setAlert('Your Account has been permanantly deleted', 'success'));\n    } catch(err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}