{"ast":null,"code":"var _jsxFileName = \"/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Spinner from '../layout/Spinner';\nimport { getPost } from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, post.comments.map(comment => {\n    React.createElement(CommentItem, {\n      key: comment._id,\n      comment: comment,\n      postId: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  })));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/bhaVYa/Desktop/Northeastern/Web Design and User Experience Engineering/React/devconnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","Link","CommentForm","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACJ,EAAAA,OAAD;AAAUK,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AACtDX,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEP,CAACT,OAAD,CAFO,CAAT;AAGA,SACIM,OAAO,IAAID,IAAI,KAAK,IAApB,GAEQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAKQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAmBC,OAAD,IAAa;AAC5B,wBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,MAAA,OAAO,EAAEG,OAAxC;AAAiD,MAAA,MAAM,EAAER,IAAI,CAACK,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAFA,CADL,CANJ,CANZ;AAoBH,CAxBD;;AA0BAN,IAAI,CAACU,SAAL,GAAiB;AACbd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEbX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAAoCI,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Spinner from '../layout/Spinner';\nimport {getPost} from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport {Link} from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    },[getPost]);\n    return (\n        loading || post === null?\n            (\n                <Spinner/>\n            ):\n            (\n                <Fragment>\n                    <Link to=\"/posts\" className=\"btn\">\n                        Back To Posts\n                    </Link>\n                    <PostItem post={post} showActions={false}/>\n                    <CommentForm postId={post._id} />\n                    <div className=\"comments\">\n                        {post.comments.map((comment) => {\n                            <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                        })}\n                    </div>\n                </Fragment>\n            )\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}